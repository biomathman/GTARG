C$Procedure                         SUMMRYC      SUBROUTINE SUMMRY ( STRAT  ,      &                    ORBIN  , DATIN  , rev,      &                    DV     , dvlcr, PITCH, YAW, ORBWRK ,      &                    LIMITS ,      &                    ORBEND , DATEND ,      &			  tmaneuver, tmaneuverc,      &			  betap, norbits, norbitsc     &                  )CC*******************************************************************************CC       Copyright (C) 1993, California Institute of Technology.  U.S.C       Government Sponsorhip under NASA Contract NAS7-918 isC       acknowledged.CC*******************************************************************************CCC$ LogCC  Date         Name               DescriptionC  -----------------------------------------------------------------------------C  26-JUL-1990  Eric Cannell       creation of SUMMRYC  23-SEP-1991  Bruce Shapiro      change format slightly to fit in < 80 columnsC  20-APR-1992  Bruce Shapiro	   output change in elementsCC$ PurposeCC  SUMMRY prints an executive's summary of the final targeted ground trackC  on the last page of the output file.CC  I explain the input STRAT as follows:CC        STRAT = 'RUNOUT' --> no targeting required. SUMMRY simply execute theC                             given dV and runout the ground track for C                             DAYS daysC        STRAT = 'LONG'   --> longitudinal targeting to the west boundary.C                             SUMMRY figures out the dV that will place theC                             furthest westward point of the ground trackC                             tangent to the west boundary.C        STRAT = 'EAST'   --> time targeting to the east boundary. SUMMRYC                             figures out the dV that will cause the groundC                             track to cross the east boundary in TIMTGT days.C        STRAT = 'WEST'   --> time targeting to the west boundary. SUMMRYC                             figures out the dV that will cause the groundC                             track to cross the west boundary in TIMTGT days.CC$ Input_ArgumentsCC  Name    Type   Dim        Units   DescriptionC  -----------------------------------------------------------------------------C  STRAT    C*6     1            -   see PurposeC  ORBIN     DP     6       km,deg   initial orbit of (a,e,i,LAN,w,M)C				     (at DATIN)C  DATIN   C*25     1          -->   input epoch of ORBIT in TIMETRANS formatC                                    'dd-mmm-yyyy hh:mm:ss.fffC  REV	     i      1                input rev #C  DV        DP     1       mm/sec   targeted dVC  DVLCR     DP     3       km/sec   long-track,x-track,radial component of dvC  ORBWRK    DP     6       km,deg   post-maneuver orbit of (a,e,i,LAN,w,M)C  LIMITS    DP   4,2      days,km   with regard to ascending nodes, theC                                    time (in days) and ground track offsetC                                    (in km) of the first node, the furthestC                                    west node, the furthest east node, andC                                    the last node of the ground track. LIMITSC                                    allows GTARG to classify the ground track.C                                                         time   offsetC                                                       |------|--------|C                                    first node         | days |   km   |C                                    furthest west node | days |   km   |C                                    furthest east node | days |   km   |C                                    final node         | days |   km   |C                                                       |------|--------|C  ORBEND    DP     6       km,deg   final orbitC  DATEND  C*25     1            -   epoch of ORBENDC  tmaneuver dp     3         days   maneuver interval for long targetingC					1-west, 2-unbiased, 3-eastC  norbits    i     3                orbits until next maneuverCC$ Declarations_of_Input_and_Output_ArgumentsC      double precision	   betap      CHARACTER*25         DATEND      CHARACTER*25         DATIN      DOUBLE PRECISION     DV, dvlcr(3), pitch, yaw      DOUBLE PRECISION     LIMITS ( 4 , 2 )      integer		   norbits ( 3 )	      integer		   norbitsc ( 3 )	      DOUBLE PRECISION     ORBEND ( 6 )      DOUBLE PRECISION     ORBIN  ( 6 )      DOUBLE PRECISION     ORBWRK ( 6 )      integer		   rev      CHARACTER*6          STRAT      double precision     tmaneuver ( 3 )      double precision     tmaneuverc ( 3 )CC$ Declarations_of_Local_VariablesC           INTEGER              I      character*36 monthnames,AMON*3      data monthnames/'JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC'/          integer burndoy, day, month, year, dnext(3)      double precision jdnext(3), jdnow,ch2jd      external ch2jd, sec2ch      character*25 ajdnext(3), sec2ch      logical error      data ajdnext/3*' '/      double precision cal2jd      external cal2jdCC$ MethodC-&C1    Print GTARG Executive Summary.      WRITE(8,301)301   FORMAT(     &        /,1X,77('-'),     &        /,1X,'|', 24(' '),'  GTARG Executive Summary  ',     &          24(' '),'|'     &        /,1X,'|',T78,'|')C1    Print strategy.               IF      ( STRAT .EQ. 'RUNOUT' ) THEN         WRITE(8,302)                     302      FORMAT(1X,'| Strategy            : ',     &   'Non-Targeted Runout of Ground Track',T78,'|')      ELSE IF ( STRAT .EQ. 'LONG'   ) THEN         WRITE(8,303)303      FORMAT(1X,'| Strategy            : ',     &   'Longitudinal Targeting to West Boundary',T78,'|')      ELSE IF ( STRAT .EQ. 'EAST'   ) THEN          WRITE(8,304)304      FORMAT(1X,'| Strategy            : ',     &   'Time Targeting to East Boundary',T78,'|')      ELSE IF ( STRAT .EQ. 'WEST'   ) THEN         WRITE(8,305)305      FORMAT(1X,'| Strategy            : ',     &   'Time Targeting to West Boundary',T78,'|')      END IFC1    Print maneuver epoch, magnitude, change to semi-major axis,C1    and final epoch.      if (index(DATIN,'-').eq.2) datin=' '//datin       read( datin,'(i2,1x,A3,1x,I4)') day,amon,year      month=1+index(monthnames,amon)/3C      burndoy=dayoyr(year,month,day)          burndoy = NINT ( cal2jd (year, month, day, 0, 0, 0, 0.0d0 ) -     &	 	       cal2jd (year, 1, 0, 0, 0, 0, 0.0d0 ) )      WRITE(8,306) DATIN(1:11),burndoy,datin(13:25),      &          rev, DV , (1.0D6*DVLCR(i),i=1,3),      &		PITCH, YAW,  betap, DATEND306   FORMAT(1X,'|',T78,'|',     &     /,1X,'| Maneuver Epoch      : ',A11,'/',I3.3,1x,a13,T78,'|',     &     /,1X,'|',T78,'|',     &     /,1X,'| Rev Number          : ',I10,T78,'|',     &     /,1X,'|',T78,'|',     &     /,1X,'| Maneuver Delta-V',T78,'|',     &     /,1x,'|     Total Magnitude : ',F10.5,' mm/sec',T78,'|',     &     /,1x,'|         Along-track : ',F10.5,' mm/sec',T78,'|',     &     /,1x,'|         Cross-track : ',F10.5,' mm/sec',T78,'|',     &     /,1x,'|              Radial : ',F10.5,' mm/sec',T78,'|',     &     /,1X,'|',T78,'|',     &     /,1x,'| Maneuver Direction',T78,'|',     &     /,1X,'|         Pitch Angle : ',F10.2,' degrees',T78,'|',     &     /,1X,'|           Yaw Angle : ',F10.2,' degrees',T78,'|',     &     /,1X,'|',T78,'|',     &     /,1x,'| Maneuver Beta Prime : ',F10.2,' degrees',T78,'|',     &     /,1X,'|',T78,'|',     &     /,1X,'| Final Epoch         : ',A25,T78,'|',     &     /,1X,'|',T78,'|')C1    Print maneuver period or ground track length.      IF ( STRAT .EQ. 'RUNOUT' ) THEN         WRITE(8,307) LIMITS(4,1)307      FORMAT(1X,'| Ground Track Length : ',F10.5,' days',T78,'|',     &     /,1X,'|',T78,'|')         if (Tmaneuver(1).le.1.0d-05 .or.     &       Tmaneuver(2).le.1.0d-05 .or.     &       Tmaneuver(3).le.1.0d-05 ) then            write(8,3075)3075        format(1x,'| Note: Runout is too short to find ',     &         'all parameters for maneuver interval',t78,'|',     &          /,1X,'|',T78,'|')         end if      end if      jdnow = ch2jd ( datin, .false., error )      if (error) write(8,*) '?? Error parsing DATIN.'      do i=1,3            jdnext(i) = jdnow + tmaneuver(i)	    ajdnext(i) = sec2ch (      &		( jdnext(i) - 2451545.0d0 ) * 86400.0 d0 )            read( ajdnext(i) ,'(i2,1x,A3,1x,I4)') day,amon,year            month=1+index(monthnames,amon)/3	    dnext(i) =      &          NINT ( cal2jd (year, month, day, 0, 0, 0, 0.0d0 ) -     &	 	       cal2jd (year, 1, 0, 0, 0, 0, 0.0d0 ) )      end do      WRITE(8,308) ( tmaneuver ( i ),      &	                ajdnext(i)(1:11),'/',dnext(i),     &			ajdnext(i)(13:17),      &		        rev + norbits(i),  i = 1,3 )      do i=1,3            jdnext(i) = jdnow + tmaneuverc(i)	    ajdnext(i) = sec2ch (      &		( jdnext(i) - 2451545.0d0 ) * 86400.0 d0 )            read( ajdnext(i) ,'(i2,1x,A3,1x,I4)') day,amon,year            month=1+index(monthnames,amon)/3	    dnext(i) =      &          NINT ( cal2jd (year, month, day, 0, 0, 0, 0.0d0 ) -     &	 	       cal2jd (year, 1, 0, 0, 0, 0, 0.0d0 ) )      end do      WRITE(8,3085) ( tmaneuverc ( i ),      &	                ajdnext(i)(1:11),'/',dnext(i),     &			ajdnext(i)(13:17),      &		        rev + norbitsc(i),  i = 1,3 )308   FORMAT(1X,'| Window for next maneuver',T78,'|',/     &          1x,'|           West bias : ',f10.2,' days ',     &		    A11,a1,i3.3,1x,a5,' rev ',i5, T78,'|',/     &          1x,'|            Unbiased : ',f10.2,' days ',     &		    A11,a1,i3.3,1x,a5,' rev ',i5, T78,'|',/     &		1x,'|           East bias : ',f10.2,' days ',     &		    A11,a1,i3.3,1x,a5,' rev ',i5, T78,'|')3085  FORMAT(1X,'| Cycle Boundary Window for next maneuver',T78,'|',/     &          1x,'| 95% West Cycle bdry : ',f10.2,' days ',     &		    A11,a1,i3.3,1x,a5,' rev ',i5, T78,'|',/     &          1x,'| Unbiased Cycle Bdry : ',f10.2,' days ',     &		    A11,a1,i3.3,1x,a5,' rev ',i5, T78,'|',/     &		1x,'| 95% East Cycle bdry : ',f10.2,' days ',     &		    A11,a1,i3.3,1x,a5,' rev ',i5, T78,'|')C1    Print pre- and post-maneuver elements and the final orbit.      WRITE(8,309) ( ORBIN(I) , ORBWRK(I) ,      &		ORBWRK(I) - ORBIN(I), ORBEND(I) , I = 1 , 6 )309   FORMAT(     &   1X,'|',T78,'|',     & /,1X,'|               |     pre-burn |',     &        '    post-burn |       change |        final |',     & /,1X,'|  parameters   |     elements |',     &        '     elements |  in elements |     elements |',     & /,1X,'| -----------------------------|--------------|',     &      '--------------|--------------|',     & /,1X,'| a, km        ',2(' |',F13.6),' |',F13.9,' |',F13.6,' |',     & /,1X,'| e            ',4(' |',F13.9),' |',     & /,1X,'| i, degrees   ',2(' |',F13.6),' |',F13.9,' |',F13.6,' |',     & /,1X,'| asc node, deg',2(' |',F13.6),' |',F13.9,' |',F13.6,' |',     & /,1X,'| w, deg       ',2(' |',F13.6),' |',F13.9,' |',F13.6,' |',     & /,1X,'| M, deg       ',2(' |',F13.6),' |',F13.9,' |',F13.6,' |',     &       /,1X,77('-'))C1    End of SUMMRY.      RETURN      END